{"version":3,"file":"static/js/592.428fa098.chunk.js","mappings":"iQAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAASC,IACd,OAAOF,IAAAA,IAAA,uCAA0CC,GAClD,CAEM,SAASE,EAAiBC,GAC/B,OAAOJ,IAAAA,IAAA,gCACoBC,EADpB,kBACiCG,EADjC,+BAGR,CAEM,SAASC,EAAaC,GAC3B,OAAON,IAAAA,IAAA,iBAAoBM,EAApB,oBAAkCL,GAC1C,CAEM,SAASM,EAAiBD,GAC/B,OAAON,IAAAA,IAAA,iBAAoBM,EAApB,4BAA0CL,GAClD,CAEM,SAASO,EAAoBF,GAClC,OAAON,IAAAA,IAAA,iBAAoBM,EAApB,4BAA0CL,GAClD,C,uFCxBD,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAuF,0BAAvF,EAAuH,uB,SCI1GQ,EAAY,SAAAC,GACvB,IAAQJ,EAAgCI,EAAhCJ,GAAIK,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,OAAQC,EAAaH,EAAbG,SAErBC,EAAWF,EAAM,UAChBG,EAAAA,GADgB,OACLH,GACd,gFAEJ,OACE,eAAII,UAAWC,EAAf,UACE,UAAC,KAAD,CAAMD,UAAWC,EAAQC,GAAE,kBAAaZ,GAAMa,MAAON,EAArD,WACE,gBAAKG,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAOG,MAAO,IAAKC,IAAKV,EAAOW,IAAKR,MAErDH,MAIR,C,uDCtBM,IAAMI,EAAW,gC,+HCCxB,EAAwB,oBAAxB,EAAmD,mB,mBCO5C,SAASQ,IACd,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMf,GAAWgB,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACRF,GAAa,IACb1B,EAAAA,EAAAA,MACG6B,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPN,EAAUM,EAAKC,QAChB,IACAC,MAAMC,QAAQC,KACdC,SAAQ,kBAAMT,GAAa,EAAnB,GACZ,GAAE,KAGD,UAACU,EAAA,EAAD,YACE,eAAItB,UAAWC,EAAf,mCAECU,GACC,SAACY,EAAA,EAAD,KAEA,eAAIvB,UAAWC,EAAf,SACGQ,GACCA,EAAOe,KAAI,gBAAGlC,EAAH,EAAGA,GAAIK,EAAP,EAAOA,MAAO8B,EAAd,EAAcA,YAAd,OACT,SAAChC,EAAA,EAAD,CAEEH,GAAIA,EACJK,MAAOA,EACPC,OAAQ6B,EACR5B,SAAU,CAAE6B,KAAM7B,IAJbP,EAFE,QAatB,C","sources":["api/movieDbApi.js","webpack://moviegan/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.js","constans/pathImgDB.js","webpack://moviegan/./src/pages/Home/Home.module.css?1370","pages/Home/Home.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'a1b67e21d001fd0b301e3f4d42b48ca7';\n\nexport function getTrandingMovies() {\n  return axios.get(`/trending/movie/week?api_key=${KEY}`);\n}\n\nexport function getMoviesByQuery(query) {\n  return axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&page=1&include_adult=false`\n  );\n}\n\nexport function getMovieById(id) {\n  return axios.get(`/movie/${id}?api_key=${KEY}`);\n}\n\nexport function getMovieCastById(id) {\n  return axios.get(`/movie/${id}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviewsById(id) {\n  return axios.get(`/movie/${id}/reviews?api_key=${KEY}`);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieCard_item__c3tx6\",\"link\":\"MovieCard_link__EvibY\",\"boxImg\":\"MovieCard_boxImg__9GaFV\",\"img\":\"MovieCard_img__YZsvZ\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMG_PATH } from '../../constans/pathImgDB';\nimport s from './MovieCard.module.css';\n\nexport const MovieCard = props => {\n  const { id, title, poster, location } = props;\n\n  const checkimg = poster\n    ? `${IMG_PATH}${poster}`\n    : 'https://img.freepik.com/free-vector/red-prohibited-sign_1284-42862.jpg?w=2000';\n\n  return (\n    <li className={s.item}>\n      <Link className={s.link} to={`/movies/${id}`} state={location}>\n        <div className={s.boxImg}>\n          <img className={s.img} width={200} alt={title} src={checkimg} />\n        </div>\n        {title}\n      </Link>\n    </li>\n  );\n};\n","export const IMG_PATH = 'http://image.tmdb.org/t/p/w500';\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\",\"list\":\"Home_list__aopnc\"};","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrandingMovies } from 'api/movieDbApi';\nimport { Container } from 'components/Container';\nimport { Loader } from 'components/Loader';\nimport s from './Home.module.css';\nimport { MovieCard } from 'components/MovieCard';\n\nexport function Home() {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrandingMovies()\n      .then(({ data }) => {\n        setMovies(data.results);\n      })\n      .catch(console.log)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <Container>\n      <h1 className={s.title}>Trending Movies Today</h1>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul className={s.list}>\n          {movies &&\n            movies.map(({ id, title, poster_path }) => (\n              <MovieCard\n                key={id}\n                id={id}\n                title={title}\n                poster={poster_path}\n                location={{ from: location }}\n              />\n            ))}\n        </ul>\n      )}\n    </Container>\n  );\n}\n"],"names":["axios","KEY","getTrandingMovies","getMoviesByQuery","query","getMovieById","id","getMovieCastById","getMovieReviewsById","MovieCard","props","title","poster","location","checkimg","IMG_PATH","className","s","to","state","width","alt","src","Home","useState","movies","setMovies","isLoading","setIsLoading","useLocation","useEffect","then","data","results","catch","console","log","finally","Container","Loader","map","poster_path","from"],"sourceRoot":""}