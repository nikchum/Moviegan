{"version":3,"file":"static/js/75.07b24b61.chunk.js","mappings":"gQAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAASC,IACd,OAAOF,IAAAA,IAAA,uCAA0CC,GAClD,CAEM,SAASE,EAAiBC,GAC/B,OAAOJ,IAAAA,IAAA,gCACoBC,EADpB,kBACiCG,EADjC,+BAGR,CAEM,SAASC,EAAaC,GAC3B,OAAON,IAAAA,IAAA,iBAAoBM,EAApB,oBAAkCL,GAC1C,CAEM,SAASM,EAAiBD,GAC/B,OAAON,IAAAA,IAAA,iBAAoBM,EAApB,4BAA0CL,GAClD,CAEM,SAASO,EAAoBF,GAClC,OAAON,IAAAA,IAAA,iBAAoBM,EAApB,4BAA0CL,GAClD,C,uDCzBM,IAAMQ,EAAW,gC,qJCCxB,EAAuB,qBAAvB,EAAoD,sBAApD,EAAgF,oBAAhF,EAA2G,qBAA3G,EAAuI,qBAAvI,EAAmK,qBAAnK,EAAiM,uBAAjM,EAA8N,oBAA9N,EAA6P,yBAA7P,EAAqS,6B,SCO9R,SAASC,IACd,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcU,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,UACb,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAIAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWH,EAAaI,IAAI,QAE9BD,GACFX,EAASW,EAEZ,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACJpB,IACFY,GAAa,IACbb,EAAAA,EAAAA,IAAiBC,GACduB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPC,QAAQC,IAAIF,EAAKG,SACjBlB,EAAUe,EAAKG,SACfR,EAAgB,CAAES,KAAM5B,GACzB,IACA6B,MAAMJ,QAAQC,KACdI,SAAQ,kBAAMlB,GAAa,EAAnB,IAEd,GAAE,CAACZ,EAAOmB,IASX,OACE,UAACY,EAAA,EAAD,YACE,kBAAMC,UAAWC,EAAQC,IAAKnB,EAAMoB,SATf,SAAAC,GACvB,IAAQC,EAAgBD,EAAEE,OAAOC,SAAzBF,YACRD,EAAEI,iBACF9B,EAAS2B,EAAYI,OACrB1B,EAAK2B,QAAQC,OACd,EAIG,WACE,kBACEX,UAAWC,EACXW,YAAY,wBACZhB,KAAK,iBAEP,mBAAQI,UAAWC,EAAOY,KAAK,SAA/B,wBAKK,OAANrC,QAAM,IAANA,OAAA,EAAAA,EAAQsC,QAAS,IAChB,iBAAKd,UAAWC,EAAhB,wCAC8B,KAC5B,iBAAMD,UAAWC,EAAjB,SAAkCjC,IAFpC,gBAMDW,GACC,SAACoC,EAAA,EAAD,KAEA,eAAIf,UAAWC,EAAf,SACGzB,GACCA,EAAOwC,KAAI,YAAiC,IAA9B9C,EAA6B,EAA7BA,GAAI+C,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACjBC,EAAWD,EAAW,UACrB7C,EAAAA,GADqB,OACV6C,GACd,gFAEJ,OACE,eAAIlB,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAWC,EACXmB,GAAE,kBAAalD,GACfmD,MAAO,CAAEC,KAAMzC,GAHjB,WAKE,gBAAKmB,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXsB,MAAO,IACPC,IAAKP,EACLQ,IAAKN,MAGRF,MAduB/C,EAkB/B,QAKZ,C","sources":["api/movieDbApi.js","constans/pathImgDB.js","webpack://moviegan/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'a1b67e21d001fd0b301e3f4d42b48ca7';\n\nexport function getTrandingMovies() {\n  return axios.get(`/trending/movie/week?api_key=${KEY}`);\n}\n\nexport function getMoviesByQuery(query) {\n  return axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&page=1&include_adult=false`\n  );\n}\n\nexport function getMovieById(id) {\n  return axios.get(`/movie/${id}?api_key=${KEY}`);\n}\n\nexport function getMovieCastById(id) {\n  return axios.get(`/movie/${id}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviewsById(id) {\n  return axios.get(`/movie/${id}/reviews?api_key=${KEY}`);\n}\n","export const IMG_PATH = 'http://image.tmdb.org/t/p/w500';\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"list\":\"Movies_list__hqYjd\",\"item\":\"Movies_item__Ba4aJ\",\"link\":\"Movies_link__MzAfU\",\"boxImg\":\"Movies_boxImg__3bbKI\",\"img\":\"Movies_img__8sw1H\",\"notFound\":\"Movies_notFound__Hqs4F\",\"notFoundName\":\"Movies_notFoundName__5MaNd\"};","import { useState, useEffect, useRef } from 'react';\nimport { getMoviesByQuery } from '../../api/movieDbApi';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Container } from 'components/Container';\nimport { IMG_PATH } from '../../constans/pathImgDB';\nimport { Loader } from 'components/Loader';\nimport s from './Movies.module.css';\n\nexport function Movies() {\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const form = useRef();\n  const [searchParams, setSearchParams] = useSearchParams();\n  // console.log(location);\n  // console.log(searchParams.get('name'));\n\n  useEffect(() => {\n    const getQuery = searchParams.get('name');\n\n    if (getQuery) {\n      setQuery(getQuery);\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (query) {\n      setIsLoading(true);\n      getMoviesByQuery(query)\n        .then(({ data }) => {\n          console.log(data.results);\n          setMovies(data.results);\n          setSearchParams({ name: query });\n        })\n        .catch(console.log)\n        .finally(() => setIsLoading(false));\n    }\n  }, [query, setSearchParams]);\n\n  const handleSubmitForm = e => {\n    const { searchQuery } = e.target.elements;\n    e.preventDefault();\n    setQuery(searchQuery.value);\n    form.current.reset();\n  };\n\n  return (\n    <Container>\n      <form className={s.form} ref={form} onSubmit={handleSubmitForm}>\n        <input\n          className={s.input}\n          placeholder=\"Enter movie to search\"\n          name=\"searchQuery\"\n        />\n        <button className={s.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      {movies?.length < 1 && !null && (\n        <div className={s.notFound}>\n          Movies matching your search{' '}\n          <span className={s.notFoundName}>{query}</span> not found\n        </div>\n      )}\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul className={s.list}>\n          {movies &&\n            movies.map(({ id, title, poster_path }) => {\n              const checkimg = poster_path\n                ? `${IMG_PATH}${poster_path}`\n                : 'https://img.freepik.com/free-vector/red-prohibited-sign_1284-42862.jpg?w=2000';\n\n              return (\n                <li className={s.item} key={id}>\n                  <Link\n                    className={s.link}\n                    to={`/movies/${id}`}\n                    state={{ from: location }}\n                  >\n                    <div className={s.boxImg}>\n                      <img\n                        className={s.img}\n                        width={200}\n                        alt={title}\n                        src={checkimg}\n                      />\n                    </div>\n                    {title}\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </Container>\n  );\n}\n"],"names":["axios","KEY","getTrandingMovies","getMoviesByQuery","query","getMovieById","id","getMovieCastById","getMovieReviewsById","IMG_PATH","Movies","useState","movies","setMovies","setQuery","isLoading","setIsLoading","location","useLocation","form","useRef","useSearchParams","searchParams","setSearchParams","useEffect","getQuery","get","then","data","console","log","results","name","catch","finally","Container","className","s","ref","onSubmit","e","searchQuery","target","elements","preventDefault","value","current","reset","placeholder","type","length","Loader","map","title","poster_path","checkimg","to","state","from","width","alt","src"],"sourceRoot":""}