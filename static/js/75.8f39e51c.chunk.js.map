{"version":3,"file":"static/js/75.8f39e51c.chunk.js","mappings":"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","sources":["api/movieDbApi.js","webpack://moviegan/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.js","constans/pathImgDB.js","webpack://moviegan/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'a1b67e21d001fd0b301e3f4d42b48ca7';\n\nexport function getTrandingMovies() {\n  return axios.get(`/trending/movie/week?api_key=${KEY}`);\n}\n\nexport function getMoviesByQuery(query) {\n  return axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&page=1&include_adult=false`\n  );\n}\n\nexport function getMovieById(id) {\n  return axios.get(`/movie/${id}?api_key=${KEY}`);\n}\n\nexport function getMovieCastById(id) {\n  return axios.get(`/movie/${id}/credits?api_key=${KEY}`);\n}\n\nexport function getMovieReviewsById(id) {\n  return axios.get(`/movie/${id}/reviews?api_key=${KEY}`);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieCard_item__c3tx6\",\"link\":\"MovieCard_link__EvibY\",\"boxImg\":\"MovieCard_boxImg__9GaFV\",\"img\":\"MovieCard_img__YZsvZ\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMG_PATH } from '../../constans/pathImgDB';\nimport s from './MovieCard.module.css';\n\nexport const MovieCard = props => {\n  const { id, title, poster, location } = props;\n\n  const checkimg = poster\n    ? `${IMG_PATH}${poster}`\n    : 'https://img.freepik.com/free-vector/red-prohibited-sign_1284-42862.jpg?w=2000';\n\n  return (\n    <li className={s.item}>\n      <Link className={s.link} to={`/movies/${id}`} state={location}>\n        <div className={s.boxImg}>\n          <img className={s.img} width={200} alt={title} src={checkimg} />\n        </div>\n        {title}\n      </Link>\n    </li>\n  );\n};\n","export const IMG_PATH = 'http://image.tmdb.org/t/p/w500';\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"list\":\"Movies_list__hqYjd\",\"notFound\":\"Movies_notFound__Hqs4F\",\"notFoundName\":\"Movies_notFoundName__5MaNd\"};","import { useState, useEffect, useRef } from 'react';\nimport { getMoviesByQuery } from '../../api/movieDbApi';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Container } from 'components/Container';\nimport { Loader } from 'components/Loader';\nimport { MovieCard } from 'components/MovieCard';\nimport s from './Movies.module.css';\n\nexport function Movies() {\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const form = useRef();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const getQuery = searchParams.get('name');\n\n    if (getQuery) {\n      setQuery(getQuery);\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (query) {\n      setIsLoading(true);\n      getMoviesByQuery(query)\n        .then(({ data }) => {\n          setMovies(data.results);\n          setSearchParams({ name: query });\n        })\n        .catch(console.log)\n        .finally(() => setIsLoading(false));\n    }\n  }, [query, setSearchParams]);\n\n  const handleSubmitForm = e => {\n    const { searchQuery } = e.target.elements;\n    e.preventDefault();\n    setQuery(searchQuery.value);\n    form.current.reset();\n  };\n\n  return (\n    <Container>\n      <form className={s.form} ref={form} onSubmit={handleSubmitForm}>\n        <input\n          className={s.input}\n          placeholder=\"Enter movie to search\"\n          name=\"searchQuery\"\n        />\n        <button className={s.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      {movies?.length < 1 && !null && (\n        <div className={s.notFound}>\n          Movies matching your search{' '}\n          <span className={s.notFoundName}>{query}</span> not found\n        </div>\n      )}\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul className={s.list}>\n          {movies &&\n            movies.map(({ id, title, poster_path }) => (\n              <MovieCard\n                key={id}\n                id={id}\n                title={title}\n                poster={poster_path}\n                location={{ from: location }}\n              />\n            ))}\n        </ul>\n      )}\n    </Container>\n  );\n}\n"],"names":["axios","KEY","getTrandingMovies","getMoviesByQuery","query","getMovieById","id","getMovieCastById","getMovieReviewsById","MovieCard","props","title","poster","location","checkimg","IMG_PATH","className","s","to","state","width","alt","src","Movies","useState","movies","setMovies","setQuery","isLoading","setIsLoading","useLocation","form","useRef","useSearchParams","searchParams","setSearchParams","useEffect","getQuery","get","then","data","results","name","catch","console","log","finally","Container","ref","onSubmit","e","searchQuery","target","elements","preventDefault","value","current","reset","placeholder","type","length","Loader","map","poster_path","from"],"sourceRoot":""}